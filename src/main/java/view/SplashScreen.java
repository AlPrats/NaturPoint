/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author alber
 */
public class SplashScreen extends javax.swing.JFrame {

        /**
         * Creates new form SplashScreen
         */
        public SplashScreen() {
                initComponents();
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                splashPanel = new javax.swing.JPanel();
                splashImage = new javax.swing.JLabel();
                jSeparator1 = new javax.swing.JSeparator();
                label_tittle = new javax.swing.JLabel();
                progressBar = new javax.swing.JProgressBar();
                label_loading = new javax.swing.JLabel();
                label_loadingValue = new javax.swing.JLabel();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setUndecorated(true);

                splashPanel.setBackground(new java.awt.Color(255, 255, 255));
                splashPanel.setPreferredSize(new java.awt.Dimension(900, 490));

                splashImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/people.jpg"))); // NOI18N

                label_tittle.setFont(new java.awt.Font("Rubik SemiBold", 1, 60)); // NOI18N
                label_tittle.setForeground(new java.awt.Color(153, 153, 153));
                label_tittle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                label_tittle.setText("NaturPoint");

                progressBar.setForeground(new java.awt.Color(255, 204, 204));

                label_loading.setFont(new java.awt.Font("Rubik Light", 0, 12)); // NOI18N
                label_loading.setText("Loading...");
                label_loading.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

                label_loadingValue.setFont(new java.awt.Font("Rubik Light", 0, 12)); // NOI18N
                label_loadingValue.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                label_loadingValue.setText("0 %");
                label_loadingValue.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

                javax.swing.GroupLayout splashPanelLayout = new javax.swing.GroupLayout(splashPanel);
                splashPanel.setLayout(splashPanelLayout);
                splashPanelLayout.setHorizontalGroup(
                        splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(splashPanelLayout.createSequentialGroup()
                                .addGroup(splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(splashPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(label_loading, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(label_loadingValue, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(splashPanelLayout.createSequentialGroup()
                                                .addGroup(splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(splashPanelLayout.createSequentialGroup()
                                                                .addGap(131, 131, 131)
                                                                .addComponent(splashImage))
                                                        .addGroup(splashPanelLayout.createSequentialGroup()
                                                                .addGap(249, 249, 249)
                                                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(splashPanelLayout.createSequentialGroup()
                                                                .addGap(231, 231, 231)
                                                                .addComponent(label_tittle, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 147, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                splashPanelLayout.setVerticalGroup(
                        splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(splashPanelLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(splashImage, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_tittle, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                .addGroup(splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(label_loadingValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                                        .addGroup(splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(label_loading, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splashPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(splashPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                );

                pack();
                setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

        /**
         * @param args the command line arguments
         */
        public static void main(String args[]) {
                /* Set the Nimbus look and feel */
                //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                 */
                try {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                if ("Nimbus".equals(info.getName())) {
                                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                        break;
                                }
                        }
                } catch (ClassNotFoundException ex) {
                        java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                        java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                        java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                        java.util.logging.Logger.getLogger(SplashScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                
                SplashScreen sp  = new SplashScreen();
                sp.setVisible(true);
                
                Login login = new Login();
                try {
                        for (int i = 0; i <= 100; i++) {
                                Thread.sleep(20);
                                sp.label_loadingValue.setText(i + "%");
                                
                                if (i == 25) {
                                        sp.label_loading.setText("Loading program...");
                                }
                                if (i == 50) {
                                        sp.label_loading.setText("Connecting to database...");
                                }
                                if (i == 75) {
                                        sp.label_loading.setText("Connection successfully...");
                                }
                                if (i == 80) {
                                        sp.label_loading.setText("Launching program...");
                                }
                                sp.progressBar.setValue(i);
                        }
                } catch (InterruptedException e) {
                        JOptionPane.showMessageDialog(null, e);
                }
                
                sp.setVisible(false);
                login.setVisible(true);
                
                sp.dispose();
        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JSeparator jSeparator1;
        private javax.swing.JLabel label_loading;
        private javax.swing.JLabel label_loadingValue;
        private javax.swing.JLabel label_tittle;
        private javax.swing.JProgressBar progressBar;
        private javax.swing.JLabel splashImage;
        private javax.swing.JPanel splashPanel;
        // End of variables declaration//GEN-END:variables
}
